% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metadata.R, R/xportr_metadata.R
\name{xportr_metadata}
\alias{xportr_metadata}
\title{Set variable specifications and domain}
\usage{
xportr_metadata(.df, metacore, domain = NULL)

xportr_metadata(.df, metacore, domain = NULL)
}
\arguments{
\item{.df}{An R object with columns that can be coerced}

\item{metacore}{Either a data.frame that has the names of all possible columns
and their types, or a \code{Metacore} object from the \code{Metacore} package. Required
column names are dataset, variables, type}

\item{domain}{Name of the dataset. Ex ADAE/DM. This will be used to subset
the metacore object. If none is passed it is assumed to be the name of the
dataset passed in \code{.df}.}

\item{metadata}{An appropriate metadata object that has available
column-level metadata appropriate for use in other xportr functions}
}
\value{
\code{.df} dataset with metadata and domain attributes set

\code{.df} dataset with metadata and domain attributes set
}
\description{
Sets metadata for a dataset in a way that can be accessed by other xportr
functions. If used at the start of an xportr pipeline, it removes the need to
set metadata and domain at each step individually
}
\examples{

metadata <- data.frame(
  dataset = "test",
  variable = c("Subj", "Param", "Val", "NotUsed"),
  type = c("numeric", "character", "numeric", "character"),
  order = c(1, 3, 4, 2)
)

adlb <- data.frame(
  Subj = as.character(123, 456, 789),
  Different = c("a", "b", "c"),
  Val = c("1", "2", "3"),
  Param = c("param1", "param2", "param3")
)

xportr_metadata(adlb, metadata, "test")

if (rlang::is_installed("magrittr")) {
  library(magrittr)

  adlb \%>\%
    xportr_metadata(metadata, "test") \%>\%
    xportr_type() \%>\%
    xportr_order()
}
metadata <- data.frame(
  dataset = "test",
  variable = c("Subj", "Param", "Val", "NotUsed"),
  type = c("numeric", "character", "numeric", "character")
)

.df <- data.frame(
  Subj = as.character(123, 456, 789),
  Different = c("a", "b", "c"),
  Val = c("1", "2", "3"),
  Param = c("param1", "param2", "param3")
)

df2 <- xportr_metadata(.df, metadata, "test")
}
